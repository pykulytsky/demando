# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install flake8
      run: |
        pip3 install flake8
    - name: Run flake8
      uses: julianwachholz/flake8-action@v1.1.0
      with:
        checkName: 'lint'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    needs: lint
    name: Test with pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Setup PostgreSQL
      uses: Harmon758/postgresql-action@v1.0.0
      with:
        postgresql version: 12.2
        postgresql db: 'demando'
        postgresql user: 'demando'
        postgresql password: '1234'

    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        # This path is specific to Ubuntu
        path: /opt/hostedtoolcache/Python/3.9.1/x64/lib/python3.9/site-packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-pip3-
          ${{ runner.os }}-pytest-
    - name: Install dependencies
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.9.2/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.9.2/x64/lib
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip3 install -r requirements.txt
    - name: Test with pytest
      run: |
        cd src
        /opt/hostedtoolcache/Python/3.9.2/x64/bin/pytest -v --ignore=sendgrid --cov --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
      env:
        DB_NAME: demando
        DB_USER: demando
        DB_USER_PASSWORD: 1234
        DB_HOST: localhost
        POSTGRES_DB_HOST: 127.0.0.1

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: src/junit/test-results.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload pytest coverage results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: src/coverage.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

